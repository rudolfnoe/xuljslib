<?xml version="1.0" encoding="UTF-8"?>
<bindings xmlns="http://www.mozilla.org/xbl"
   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
   xmlns:xbl="http://www.mozilla.org/xbl">
   
   <binding id="baseeditor" extends="general.xml#commonBase">
      <content>
         <xul:textbox anonid="editorbox" xbl:inherits="rows cols oninput flex" multiline="true" flex="1" style="font-family:monospace"/>
      </content>
      <implementation>
         <property name="value" onget="return this.editorbox.value" onset="this.editorbox.value=val; return val"></property>
         <constructor>
            if(!this.getNamespaceObj())
               throw new Error('namespace must be set')
            this.editorbox = byAnonid(this, "editorbox")
            this.indentSpace = "   "
         </constructor>
         <method name="getCurrentLineContent">
            <body>
               var cursorPos = this.getCursorPos()
               return this.editorbox.value.substring(this.getLineBeginIndex(cursorPos), this.getLineEndIndex(cursorPos)) 
            </body>
            
         </method>
         <method name="getCurrentLineIndent">
            <body>
               <![CDATA[
                  var currentLineContent = this.getCurrentLineContent()
                  return currentLineContent.substring(0, currentLineContent.search(/(\n)|(\S)/)) 
               ]]>
            </body>
         </method>
         <method name="getCursorPos">
            <body>
               return this.editorbox.selectionEnd
            </body>
         </method>
         <method name="getLineBeginIndex">
            <parameter name="cursorPos"/>
            <body>
               return this.editorbox.value.lastIndexOf("\n", cursorPos-1) + 1
            </body>
         </method>
         <method name="getLineEndIndex">
            <parameter name="cursorPos"/>
            <body>
               var lineEndIndex = this.editorbox.value.indexOf("\n", cursorPos)
               return lineEndIndex!=-1?lineEndIndex:this.editorbox.value.length
            </body>
         </method>
         <method name="indentCurrentLine">
            <body>
               var lineBeginIndex = this.getLineBeginIndex(this.getCursorPos())
               this.insertTextAt(this.indentSpace, lineBeginIndex)
            </body>
         </method>
         <method name="insertDoubleLineBreakAndIndention">
            <body>
               var currentLineIndent = this.getCurrentLineIndent()
               this.insertTextAtCursor("\n" + currentLineIndent)
               this.indentCurrentLine()
               this.insertTextAtCursor("\n" + currentLineIndent, true)
            </body>
         </method>
         <method name="insertLineBreakWithIndention">
            <body>
               var currentLineIndent = this.getCurrentLineIndent()
               this.insertTextAtCursor("\n" + currentLineIndent)
            </body>
         </method>
         <method name="insertTextAt">
            <parameter name="text"/>
            <parameter name="index"/>
            <parameter name="after"/>
            <body>
               this.getNamespaceObj().ControlUtils.insertTextAt(this.editorbox, text, index, after)
            </body>
         </method>
         <method name="insertTextAtCursor">
            <parameter name="text"/>
            <parameter name="after"/>
            <body>
               this.getNamespaceObj().ControlUtils.insertTextAtCursorPos(this.editorbox, text, after)
            </body>
         </method>
      </implementation>
      <handlers>
         <handler event="keydown" keycode="vk_tab">
            this.insertTextAtCursor(this.indentSpace)
            return false
         </handler>
      </handlers>
   </binding>
   
   <binding id="jseditor" extends="editors.xml#baseeditor">
      <handlers>
         <handler event="keypress" keycode="vk_return" preventdefault="true">
            this.insertLineBreakWithIndention()
         </handler>
      </handlers>
   </binding>
          
   <binding id="xmleditor" extends="editors.xml#baseeditor">
      <implementation>
         <method name="completeTag">
            <body>
               <![CDATA[
                  //determine tag to surround
                  var selectionEnd = this.editorbox.selectionEnd
                  var stringToSelectionEnd = this.editorbox.value.substring(0, selectionEnd)
                  var stringAfterSelectionEnd = this.editorbox.value.substring(selectionEnd)
                  var beforeTag = this._getStartIndexOfTag(stringToSelectionEnd)
                  var stringBeforeTag =  this.editorbox.value.substring(0,beforeTag) 
                  var tagName = this.editorbox.value.substring(beforeTag, selectionEnd)
                  var fullTag = "<" + tagName + "></" + tagName + ">"
                  this.editorbox.value = stringBeforeTag + fullTag + stringAfterSelectionEnd
                  var newSelectionEnd = selectionEnd+2
                  this.editorbox.setSelectionRange(newSelectionEnd, newSelectionEnd) 
               ]]>
            </body>
         </method>
         <method name="_getStartIndexOfTag">
            <parameter name="string"/>
            <body>
               return string.search(/\b[a-zA-Z-]*?$/)
            </body>
         </method>
      </implementation>
      <handlers>
         <handler event="keydown" modifiers="accel" keycode="vk_space">
            this.completeTag()
         </handler>
         <handler event="keypress" keycode="vk_return" preventdefault="true">
            <![CDATA[
               var stringAfterSelectionEnd = this.editorbox.value.substring(this.editorbox.selectionEnd)            
               var endTagFollows = stringAfterSelectionEnd.indexOf("</")==0
               if(endTagFollows){
                  //move cursor to right position
                  this.insertDoubleLineBreakAndIndention()
               }else{
                  this.insertLineBreakWithIndention()
               }
            ]]>
         </handler>
      </handlers>
   </binding>
</bindings>

